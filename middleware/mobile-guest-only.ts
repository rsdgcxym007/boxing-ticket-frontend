import { defineNuxtRouteMiddleware, navigateTo } from "nuxt/app";
import { useAuthStore } from "@/stores/auth";

/**
 * Mobile Guest Only Middleware
 * ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤ mobile login
 * ‡∏ñ‡πâ‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ mobile dashboard
 */
export default defineNuxtRouteMiddleware((to) => {
  // ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô client side ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  if (!process.client) return;

  const authStore = useAuthStore();

  // initialize auth store ‡πÄ‡∏û‡∏∑‡πà‡∏≠ load user ‡∏à‡∏≤‡∏Å localStorage
  authStore.initialize();

  console.log("üîê Mobile Guest Only Middleware - Checking auth state:", {
    isAuthenticated: authStore.isAuthenticated,
    user: authStore.user,
    token: process.client ? localStorage.getItem("token") : null,
  });

  // ‡∏ñ‡πâ‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ mobile dashboard
  if (authStore.isAuthenticated) {
    console.log("‚úÖ User already authenticated, redirecting to mobile dashboard");
    return navigateTo("/mobile");
  }

  console.log("üö™ User not authenticated, allowing access to mobile login");
});
